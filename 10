def kernal(point,xmat,k):
  m,n=np.shape(xmat)
  weights=np.mat(np.eye(m))
  for j in range(m):
    diff=point-X[j]
    weights[j,j]=np.exp((diff*diff.T)/(-2.0*k**2))
  return  weights
def localweight(point,xmat,ymat,k):
  wt=kernal(point,xmat,k)
  W=(X.T*(wt*X)).I*(X.T*wt*ymat.T)
  return W
def localWeightRegression(xmat,ymat,k):
   m,n=np.shape(xmat)
   ypred=np.zeros(m)
   for i in range(m):
    ypred[i]=xmat[i]*localweight(xmat[i],xmat,ymat,k)   
   return ypred 
import matplotlib. pyplot as plt
import pandas as pd
import numpy as np
data=pd.read_csv(r'C:/Users/exam2/Downloads/tips.csv')
print(data)
colA=np.array(data.total_bill)
colB=np.array(data.tip)
mcolA=np.mat(colA)
mcolB=np.mat(colB)
m=np.shape(mcolB)[1]
one=np.ones((1,m),dtype=int)
X=np.hstack((one.T,mcolA.T))
ypred=localWeightRegression(X,mcolB,0.8)
print(X.shape)
xsort=X.copy()
xsort.sort(axis=0)
plt.plot(colA,colB,color='blue')
plt.plot(xsort[:1],ypred[X[:1].argsort(0)],color='red',linewidth=5)
plt.xlabel("total bill")
plt.xlabel("tip")
plt.show()   
   
